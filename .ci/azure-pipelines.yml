trigger:
  batch: true
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'

strategy:
  matrix:
    Debug:
      BuildConfiguration: development
      ArtifactSuffix: debug
    Release:
      BuildConfiguration: production
      ArtifactSuffix: release
    Libre:
      BuildConfiguration: production
      ArtifactSuffix: libre

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSpec: '12.x'

- script: 'export NODE_ENV=$(BuildConfiguration)'
  displayName: 'Export Node Variable'
  condition: eq(variables['BuildConfiguration'], 'debug')

- script: 'npm ci'
  displayName: 'Install Dependencies'

- script: 'npx cordova prepare'
  displayName: 'Prepare Cordova'

- script: 'npx cordova build android --debug'
  displayName: 'Build Debug'
  condition: eq(variables['BuildConfiguration'], 'debug')

- script: 'npx cordova plugin rm cordova-plugin-chromecast'
  displayName: 'Remove Play Services'
  condition: eq(variables['ReleaseSuffix'], 'libre')

- script: 'npx cordova build android --release'
  displayName: 'Build Release'
  condition: eq(variables['BuildConfiguration'], 'release')

- task: CopyFiles@2
  displayName: 'Copy APK'
  inputs:
    SourceFolder: 'platforms/android/app/build/outputs/apk/'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish APK'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'jellyfin-android-$(ArtifactSuffix)'
    publishLocation: 'Container'
